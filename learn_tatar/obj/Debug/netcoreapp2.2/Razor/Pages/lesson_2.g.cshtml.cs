#pragma checksum "B:\Users\garipoff\source\repos\learn_tatar\learn_tatar\Pages\lesson_2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "92b7838088f40d9947891c19bff9e7cb632d2a74"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(learn_tatar.Pages.Pages_lesson_2), @"mvc.1.0.razor-page", @"/Pages/lesson_2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/lesson_2.cshtml", typeof(learn_tatar.Pages.Pages_lesson_2), null)]
namespace learn_tatar.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "B:\Users\garipoff\source\repos\learn_tatar\learn_tatar\Pages\_ViewImports.cshtml"
using learn_tatar;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"92b7838088f40d9947891c19bff9e7cb632d2a74", @"/Pages/lesson_2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aea0441ac4b86091291a88b360bc86a62d38f900", @"/Pages/_ViewImports.cshtml")]
    public class Pages_lesson_2 : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("shortcut icon"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/icon.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("image/x-icon"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "B:\Users\garipoff\source\repos\learn_tatar\learn_tatar\Pages\lesson_2.cshtml"
  
    ViewData["Title"] = "–£—Ä–æ–∫ 2";

#line default
#line hidden
            BeginContext(89, 4, true);
            WriteLiteral("    ");
            EndContext();
            BeginContext(93, 218, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "92b7838088f40d9947891c19bff9e7cb632d2a744422", async() => {
                BeginContext(99, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(109, 71, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "92b7838088f40d9947891c19bff9e7cb632d2a744811", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(180, 124, true);
                WriteLiteral("\r\n        <style>\r\n            span {\r\n                background-color: yellowgreen;\r\n            }\r\n        </style>\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(311, 7317, true);
            WriteLiteral(@"
    <h1>–£—Ä–æ–∫ 2üòò</h1>
    <p>–ì–ª–∞–≥–æ–ª –≤—Å–µ–≥–¥–∞ —Å—Ç–∞–≤–∏—Ç—Å—è –≤ –∫–æ–Ω–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</p>
    <div class=""table-responsive"">
        <table class=""table"">
            <thead class=""thead-dark"">
                <tr>
                    <th scope=""col""></th>
                    <th scope=""col"">–ö–û–ì–û?</th>
                    <th scope=""col"">–¢–ê–ù–´–®!(–ó–ù–ê–ö–û–ú–¨–°–Ø)</th>
                    <th scope=""col"">–í–û–ü–†–û–°</th>
                    <th scope=""col"">–û–¢–†–ò–¶–ê–ù–ò–ï</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope=""row"">–ú–ò–ù</th>
                    <td>–ú–ò–ù<span>–ï</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê–ú</span></td>
                    <td>–¢–ê–ù–´–®–ê–ú<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô–ú</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–°–ò–ù</th>
                    <td>–°–ò–ù<span>–ï</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê–°–´“¢</span></td>
                    <td>–¢–ê–ù–´–®–ê");
            WriteLiteral(@"–°–´“¢<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô–°–´“¢</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–£–õ</th>
                    <td><span>–ê–ù–´</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê</span></td>
                    <td>–¢–ê–ù–´–®–ê<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–ë–ï–ó</th>
                    <td>–ë–ï–ó<span>–ù–ï</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê–ë–´–ó</span></td>
                    <td>–¢–ê–ù–´–®–ê–ë–´–ó<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô–ë–´–ó</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–°–ï–ó</th>
                    <td>–°–ï–ó<span>–ù–ï</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê–°–´–ó</span></td>
                    <td>–¢–ê–ù–´–®–ê–°–´–ó<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô–°–´–ó</span></td>
                </tr>
                <tr>");
            WriteLiteral(@"
                    <th scope=""row"">–ê–õ–ê–†</th>
                    <td>–ê–õ–ê–†<span>–ù–´</span></td>
                    <td>–¢–ê–ù–´–®<span>–ê–õ–ê–†</span></td>
                    <td>–¢–ê–ù–´–®–ê–õ–ê–†<span>–ú–´?</span></td>
                    <td>–¢–ê–ù–´–®<span>–ú–´–ô–õ–ê–†</span></td>
                </tr>
            </tbody>
        </table>
    </div>
    <p>–ì–ª–∞–≥–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ –º—è–≥–∫–∏–µ –∑–≤—É–∫–∏:</p>
    <div class=""table-responsive"">
        <table class=""table"">
            <thead class=""thead-dark"">
                <tr>
                    <th scope=""col""></th>
                    <th scope=""col"">–ö–û–ì–û?</th>
                    <th scope=""col"">–≠–ó–õ”ò!(–ò–©–ò)</th>
                    <th scope=""col"">–í–û–ü–†–û–°</th>
                    <th scope=""col"">–û–¢–†–ò–¶–ê–ù–ò–ï</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope=""row"">–ú–ò–ù</th>
                    <td>–ú–ò–ù<span>–ï</span></td>
                    <td>–≠–ó<span>–õ–ò–ú</span></td>
                    <t");
            WriteLiteral(@"d>–≠–ó–õ–ò–ú<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò–ú</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–°–ò–ù</th>
                    <td>–°–ò–ù<span>–ï</span></td>
                    <td>–≠–ó<span>–õ–ò–°–ï“¢</span></td>
                    <td>–≠–ó–õ–ò–°–ï“¢<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò–ú</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–£–õ</th>
                    <td><span>–ê–ù–´</span></td>
                    <td>–≠–ó<span>–õ–ò</span></td>
                    <td>–≠–ó–õ–ò<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–ë–ï–ó</th>
                    <td>–ë–ï–ó<span>–ù–ï</span></td>
                    <td>–≠–ó<span>–õ–ò–ë–ï–ó</span></td>
                    <td>–≠–ó–õ–ò–ë–ï–ó<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò–ë–ï–ó</span></td>
                </tr>
                <tr>
                   ");
            WriteLiteral(@" <th scope=""row"">–°–ï–ó</th>
                    <td>–°–ï–ó<span>–ù–ï</span></td>
                    <td>–≠–ó<span>–õ–ò–°–ï–ó</span></td>
                    <td>–≠–ó–õ–ò–°–ï–ó<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò–°–ï–ó</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–ê–õ–ê–†</th>
                    <td>–ê–õ–ê–†<span>–ù–´</span></td>
                    <td>–≠–ó<span>–õ–ò–õ”ò–†</span></td>
                    <td>–≠–ó–õ–ò–õ”ò–†<span>–ú–ï?</span></td>
                    <td>–≠–ó<span>–õ”ò–ú–ò–õ”ò–†</span></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class=""table-responsive"">
        <table class=""table"">
            <thead class=""thead-dark"">
                <tr>
                    <th scope=""col""></th>
                    <th scope=""col"">–ö–û–ì–û?</th>
                    <th scope=""col"">–ö–ò–¢!(–£–ô–î–ò)</th>
                    <th scope=""col"">–í–û–ü–†–û–°</th>
                    <th scope=""col"">–û–¢–†–ò–¶–ê–ù–ò–ï</th>
                </tr>
            </thea");
            WriteLiteral(@"d>
            <tbody>
                <tr>
                    <th scope=""row"">–ú–ò–ù</th>
                    <td>–ú–ò–ù<span>–ï</span></td>
                    <td>–ö–ò–¢<span>”ò–ú</span></td>
                    <td>–ö–ò–¢”ò–ú<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò–ú</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–°–ò–ù</th>
                    <td>–°–ò–ù<span>–ï</span></td>
                    <td>–ö–ò–¢<span>”ò–°–ï“¢</span></td>
                    <td>–ö–ò–¢”ò–°–ï“¢<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò–°–ï“¢</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–£–õ</th>
                    <td><span>–ê–ù–´</span></td>
                    <td>–ö–ò–¢<span>”ò</span></td>
                    <td>–ö–ò–¢”ò<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–ë–ï–ó</th>
                    <td>–ë–ï–ó<span>–ù–ï</span></td>
           ");
            WriteLiteral(@"         <td>–ö–ò–¢<span>”ò–ë–ï–ó</span></td>
                    <td>–ö–ò–¢”ò–ë–ï–ó<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò–ë–ï–ó</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–°–ï–ó</th>
                    <td>–°–ï–ó<span>–ù–ï</span></td>
                    <td>–ö–ò–¢<span>”ò–°–ï–ó</span></td>
                    <td>–ö–ò–¢”ò–°–ï–ó<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò–õ”ò–†</span></td>
                </tr>
                <tr>
                    <th scope=""row"">–ê–õ–ê–†</th>
                    <td>–ê–õ–ê–†<span>–ù–´</span></td>
                    <td>–ö–ò–¢<span>”ò–õ”ò–†</span></td>
                    <td>–ö–ò–¢”ò–õ”ò–†<span>–ú–ï?</span></td>
                    <td>–ö–ò–¢<span>–ú–ò–õ”ò–†</span></td>
                </tr>
            </tbody>
        </table>
    </div>
    <p>–°–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å:</p>
    <ul>
        <li>–¢–ê–ù–´–®! - –ó–ù–ê–ö–û–ú–¨–°–Ø</li>
        <li>–≠–ó–õ”ò! - –ò–©–ò</li>
        <li>–ö–ò–¢! - –£–ô–î–ò</li>
    </ul>
    <div class=""text-center"">
        <a href=""/lesson_1"" c");
            WriteLiteral("lass=\"btn btn-warning\" role=\"button\">&lt –£—Ä–æ–∫ 1</a>\r\n        <a href=\"/lesson_3\" class=\"btn btn-success\" role=\"button\">–£—Ä–æ–∫ 3 &gt</a>\r\n    </div>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<learn_tatar.Pages.lesson_2Model> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<learn_tatar.Pages.lesson_2Model> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<learn_tatar.Pages.lesson_2Model>)PageContext?.ViewData;
        public learn_tatar.Pages.lesson_2Model Model => ViewData.Model;
    }
}
#pragma warning restore 1591
